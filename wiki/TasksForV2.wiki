#summary CoveredCalc v2 のタスク
#labels Phase-Design,Featured

CoveredCalc は 2003 年ごろからあまり明確な設計もないまま少しずつ実装されていきました。
まだまだ拡張したい機能はたくさんあり、また、その拡張のためにすでに実装している部分もあるのですが、
きれいに設計できていないため拡張に手間がかかる状態です。

それと平行して、世の中の事情もずいぶん変わってきました。
Windows 環境では、Windows 98 などは過去の OS であり、最近では Windows 98 をサポートしないソフトも多くあります。
さらに 64 ビット版の Windows もリリースされていて、これを無視できない状況になってきています。
一方、BeOS 環境ではオープンソースの Haiku のαリリースが迫っています。

設計を見直すのにはちょうどいいタイミングだと思います。
そこで、CoveredCalc の次期バージョン（仮にv2と呼びます）として、主に内部の構造などの修正を検討しています。
とはいっても、余った時間に作業しているだけなので、あまり大きな修正は行えませんが‥‥。

ここに書いたタスクは最終的にすべて実現するかどうかはわかりません。
また、タスクの番号に優先順序的な意味はありません。

== タスク1: Windows 版の Unicode ビルド対応 ==

*Windows 版を Unicode ビルドできるようにします。*

現在の Windows 版は ANSI/MBCS ビルドです。
ANSI/MBCS ビルドではユーザーが利用している環境のコードページに従った文字しか表示できません。
英語版 Windows では、たとえ日本語フォントが入っていたとしても日本語は表示できません（たぶん）。
Unicode ビルドにすると、プログラム内部の文字列表現が Unicode になるため、こういった問題はなくなります。言語の混在も可能です。
ただし、Unicode ビルドにすると Windows 9X 系（98/Me）で動作しません。
理想的には ANSI/MBCS ビルドと Unicode ビルドをコンパイルオプションで切り替えられるようにして
Windows 9X 系向けと Windows NT 系（NT4/2000/XP/Vista）の 2 つのバイナリをリリースするのが
いいのですが、もう 9X 系は切り捨ててもいいように思っています。

  * ANSI/MBCS ビルドと Unicode ビルドをコンパイルオプションで切り替えられるようにする。
  * {{{AChar}}} → {{{char}}}/{{{wchar_t}}}、{{{AStr}}} → {{{char*}}}/{{{wchar_t*}}}、{{{ConstAStr}}} → {{{const char*}}}/{{{const wchar_t*}}} で定義
  * 文字列クラスの Unicode 対応（関連タスク：4）
  * HrnLib 内の Unicode 対応
  * Windows 9X 系向けバイナリのリリースは今後行わない予定。

== タスク2: Windows 版の Win64 対応準備 ==

*Windows 版について、VC++ のビルドオプションから「Win64互換チェック無効」スイッチを外して警告が出ないようにします。*

現在の Windows 版は Win32 のことしか考えていません。
将来、64ビット版 Windows に移行しやすいように今のうちに Win64 対応の準備をしておきます。
ただし、64ビット版のリリースは行いません。（手元に64ビット版を作るコンパイラも、テスト環境もないためです）

  * VC++ のビルドオプションから「Win64互換チェック無効」スイッチを外して警告が出ないようにする。

== タスク3: Haiku 版の作成 ==

*BeOS 版ファミリーの 1 つとして Haiku 版を作成します。*

BeOS 自体は非常に古い OS で、今後のバージョンアップも期待できません。
一方、[http://www.haiku-os.org Haiku] がα版リリースの手前まで進んでいます。
CoveredCalc も Haiku がリリースされた後はそちらをメインの開発軸にするつもりです。
Haiku 上で開発が行える環境になっているので、そろそろ Haiku 上での開発も行ってみます。

  * ~~Haiku 向け開発環境の構築~~
  * ~~makefile-engine を利用しない makefile の作成~~
  * ~~BeIDE を利用しない開発サイクルの模索（Peを利用？）~~
  * Haiku 版で出てくるであろう問題点への対応。

== ~~タスク4: ソースのIncludeディレクトリの廃止~~ (終了) ==

*Includeディレクトリに集めてあるヘッダファイルを各ディレクトリに再配置してIncludeディレクトリを廃止します。*

現在、ヘッダファイルはすべてIncludeというディレクトリの中に配置しています。
コンパイル時のインクルードパスを定義するのが楽だからという理由でこうなっていましたが、
ファイルが増えてくるにつれてファイルを探すのに手間がかかり扱いづらくなってきました。
ソースファイルと同じようにヘッダファイルも機能でわけたディレクトリ（ソースファイルと同じディレクトリ）に
配置するようにし、Includeディレクトリは廃止します。

== タスク5: メインウィンドウのダイアログ表示の設計を改善 ==

== タスク6: 言語ファイルの見直し ==

== タスク7: アイコンを一新 ==

== タスク8: デフォルトカバーを一新 ==

== タスク9: Windows 版のコンパイラを VC++ 2008 に ==

*Windows 版のコンパイラを VC++ 2008 Express Edition にします。*

現状の Windows 版は Visual Studio 2005 Standard Edition の Visual C++ を使ってビルドしています。
現時点で Visual C++ の最新版は Visual C++ 2008 (Visual Studio 2008) なので、その無料版である Visual C++ 2008 Express Edition にコンパイラを変更します。

 * ソリューションファイル(*.sln)、プロジェクトファイル(*.vcproj) のアップグレード
 * コンパイルエラーの修正
 * リソースエディタの調達（Express Edition にはリソースエディタが付属しないため）
